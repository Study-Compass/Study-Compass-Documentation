"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[392],{8287:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var o=n(4848),t=n(8453);const s={sidebar_position:8},i="ErrorProvider Component & ErrorContext",d={id:"Frontend/ErrorProvider Component & ErrorContext",title:"ErrorProvider Component & ErrorContext",description:"Created by: James Liu",source:"@site/docs/Frontend/ErrorProvider Component & ErrorContext.md",sourceDirName:"Frontend",slug:"/Frontend/ErrorProvider Component & ErrorContext",permalink:"/docs/Frontend/ErrorProvider Component & ErrorContext",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend/ErrorProvider Component & ErrorContext.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"documentation1",previous:{title:"CacheProvider Component & CacheContext",permalink:"/docs/Frontend/CacheProvider Component & CacheContext"},next:{title:"Backend",permalink:"/docs/Backend/"}},a={},c=[{value:"<strong>Overview</strong>",id:"overview",level:2},{value:"<strong>Functionality</strong>",id:"functionality",level:2},{value:"<strong>Key Hooks</strong>",id:"key-hooks",level:2},{value:"<strong>Provided Functions</strong>",id:"provided-functions",level:2},{value:"<strong>newError</strong>",id:"newerror",level:3},{value:"<strong>getError</strong>",id:"geterror",level:3},{value:"<strong>Context</strong>",id:"context",level:2},{value:"<strong>Usage</strong>",id:"usage",level:2},{value:"<strong>Error Handling Strategy</strong>",id:"error-handling-strategy",level:2},{value:"<strong>Dependencies</strong>",id:"dependencies",level:2},{value:"<strong>Props</strong>",id:"props",level:2},{value:"<strong>Notes</strong>",id:"notes",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"errorprovider-component--errorcontext",children:"ErrorProvider Component & ErrorContext"}),"\n",(0,o.jsx)(r.p,{children:"Created by: James Liu\nCreated time: March 27, 2024 12:59 PM\nTags: Frontend"}),"\n",(0,o.jsx)(r.h2,{id:"overview",children:(0,o.jsx)(r.strong,{children:"Overview"})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ErrorProvider"})})," component is designed to manage application-wide error handling in a React application. It provides a systematic way to handle errors, log them, and navigate the user to a designated error page. The component uses a context (",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ErrorContext"})}),") to allow child components to trigger error handling mechanisms and access error information conveniently."]}),"\n",(0,o.jsx)(r.p,{children:"notes:"}),"\n",(0,o.jsx)(r.p,{children:"This context is meant to prevent breakage at all costs. When writing code, make sure to wrap all code that has even a tiny percentage of breakage or throwing an error in try catch blocks (see more in usage)."}),"\n",(0,o.jsx)(r.h2,{id:"functionality",children:(0,o.jsx)(r.strong,{children:"Functionality"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Error Handling:"})," Centralizes the logic for handling errors throughout the application."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Error Logging and Storage:"})," Logs errors to the console and stores the error message in local storage for access on the error page."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Navigation to Error Page:"})," Utilizes a ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"navigate"})})," function (presumably passed from React Router's ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"useNavigate"})}),") to redirect users to a generic error page."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"key-hooks",children:(0,o.jsx)(r.strong,{children:"Key Hooks"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"createContext"})})," and ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"useContext"})}),": Used to create and consume the error context throughout the application."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"provided-functions",children:(0,o.jsx)(r.strong,{children:"Provided Functions"})}),"\n",(0,o.jsx)(r.h3,{id:"newerror",children:(0,o.jsx)(r.strong,{children:"newError"})}),"\n",(0,o.jsxs)(r.p,{children:["Accepts an error object and a ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"navigate"})})," function. It logs the error to the console, stores the error message in local storage, and navigates the user to a designated error page. This function is designed to be called within catch blocks or error handling functions across the application."]}),"\n",(0,o.jsx)(r.h3,{id:"geterror",children:(0,o.jsx)(r.strong,{children:"getError"})}),"\n",(0,o.jsx)(r.p,{children:"Returns the last error message stored in local storage. This function can be used on the error display page to retrieve and show the error message to the user."}),"\n",(0,o.jsx)(r.h2,{id:"context",children:(0,o.jsx)(r.strong,{children:"Context"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"ErrorContext:"})," Provides child components with access to error handling functions, allowing them to trigger error handling and retrieve error information."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:(0,o.jsx)(r.strong,{children:"Usage"})}),"\n",(0,o.jsxs)(r.p,{children:["Wrap the root component of your application with the ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ErrorProvider"})})," to make the error handling functions available throughout your application:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-jsx",children:"<ErrorProvider>\n  <App />\n</ErrorProvider>\n"})}),"\n",(0,o.jsx)(r.p,{children:"Consume the context in child components to handle errors and access error information:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-jsx",children:"const { newError, getError } = useError();\n"})}),"\n",(0,o.jsx)(r.p,{children:"Example of handling an error:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-jsx",children:"try {\n  // Potentially failing operation\n} catch (error) {\n  newError(error.message, navigate);\n}\n"})}),"\n",(0,o.jsx)(r.h2,{id:"error-handling-strategy",children:(0,o.jsx)(r.strong,{children:"Error Handling Strategy"})}),"\n",(0,o.jsx)(r.p,{children:"The provided mechanism is a basic example of centralized error handling. It's recommended to extend this approach by considering different types of errors, user-friendly error messages, and possibly retry mechanisms for recoverable errors."}),"\n",(0,o.jsx)(r.h2,{id:"dependencies",children:(0,o.jsx)(r.strong,{children:"Dependencies"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsxs)(r.strong,{children:["React Router's ",(0,o.jsx)(r.code,{children:"useNavigate"})]}),": It's implied that ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"navigate"})})," function should be provided by the caller, usually obtained from React Router's ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"useNavigate"})})," hook, for redirecting users to an error page."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"props",children:(0,o.jsx)(r.strong,{children:"Props"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"children"}),": The child components that ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ErrorProvider"})})," will wrap. This pattern allows ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ErrorProvider"})})," to function as a context provider that encapsulates the entire application or a specific part of it that requires error handling."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"notes",children:(0,o.jsx)(r.strong,{children:"Notes"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Considering implementing a more detailed error logging mechanism or integrating with external error tracking services for production applications."}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>d});var o=n(6540);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);